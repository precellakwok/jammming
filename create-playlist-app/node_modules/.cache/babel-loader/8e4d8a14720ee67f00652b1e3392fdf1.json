{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Jammming\\\\create-playlist-app\\\\src\\\\Components\\\\App\\\\App.js\";\nimport './App.css';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { SearchResults } from '../SearchResults/SearchResults';\nimport { Playlist } from '../Playlist/Playlist';\nimport { Spotify } from '../../util/Spotify';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [{\n        name: \"name1\",\n        artist: \"artist1\",\n        album: \"album1\",\n        id: 1\n      }, {\n        name: \"name2\",\n        artist: \"artist2\",\n        album: \"album2\",\n        id: 2\n      }],\n      playlistName: \"My Playlist\",\n      playlistTracks: [{\n        name: \"playlistname1\",\n        artist: \"playlistartist1\",\n        album: \"playlistalbum1\",\n        id: 1\n      }, {\n        name: \"playlistname2\",\n        artist: \"playlistartist2\",\n        album: \"playlistalbum2\",\n        id: 2\n      }]\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n  }\n\n  search(term) {\n    Spotify.search(term).then(searchResults => {\n      this.setState({\n        searchResults: searchResults\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: this.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            searchResults: this.state.searchResults,\n            onAdd: this.addTrack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            playlistName: this.state.playlistName,\n            playlistTracks: this.state.playlistTracks,\n            onRemove: this.removeTrack,\n            onNameChange: this.updatePlaylistName,\n            onSave: this.savePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Jammming/create-playlist-app/src/Components/App/App.js"],"names":["SearchBar","SearchResults","Playlist","Spotify","React","App","Component","constructor","props","state","searchResults","name","artist","album","id","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","tracks","find","savedTrack","push","setState","filter","currentTrack","trackUris","map","uri","term","then","render"],"mappings":"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","sourcesContent":["import './App.css';\n\n\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { SearchResults } from '../SearchResults/SearchResults';\nimport { Playlist } from '../Playlist/Playlist';\nimport { Spotify } from '../../util/Spotify';\nimport React from 'react';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { searchResults: [\n      {\n        name: \"name1\",\n        artist: \"artist1\",\n        album: \"album1\",\n        id: 1\n      },\n\n      { \n        name: \"name2\",\n        artist: \"artist2\",\n        album: \"album2\",\n        id: 2\n      }\n    ],\n    playlistName: \"My Playlist\", \n      playlistTracks: [\n        {\n          name: \"playlistname1\",\n          artist: \"playlistartist1\",\n          album: \"playlistalbum1\",\n          id: 1\n        },\n\n        { \n          name: \"playlistname2\",\n          artist: \"playlistartist2\",\n          album: \"playlistalbum2\",\n          id: 2\n        }\n      ],\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }; \n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n    tracks.push(track);\n    this.setState({playlistTracks: tracks});\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n    this.setState({playlistTracks: tracks});\n  }\n\n  updatePlaylistName(name) {\n    this.setState({playlistName: name});\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n  }\n\n  search(term) {\n    Spotify.search(term).then(searchResults => {\n      this.setState({searchResults: searchResults})\n    });\n  }\n\n\n  render() {\n  return (\n    <div>\n      <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n      <div className=\"App\">\n        <SearchBar onSearch={this.search} />\n        <div className=\"App-playlist\">\n          <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} />\n          <Playlist playlistName={this.state.playlistName} playlistTracks={this.state.playlistTracks} onRemove={this.removeTrack} onNameChange={this.updatePlaylistName} onSave={this.savePlaylist} />\n        </div>\n      </div>\n    </div>\n  )};\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}